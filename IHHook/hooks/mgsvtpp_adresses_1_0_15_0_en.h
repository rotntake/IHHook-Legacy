#pragma once
//GENERATED: by ghidra script ExportHooksToHeader.py
//via WriteAddressHFile

// NOT_FOUND - default for a lapi we want to use, and should actually have found the address in prior exes, but aren't in the current exported address list
// NO_USE - something we dont really want to use for whatever reason
// USING_CODE - using the default lapi code implementation instead of hooking

#include <map>

namespace IHHook {
	std::map<std::string, int64_t> mgsvtpp_adresses_1_0_15_0_en{
		{"StrCode64", 0x14cb9b730}, //0x14c1bd730
		{"PathCode64", 0x14cb9b4e0},//tex TODO need to verify naming and purpose. technically this is PathFileNameExt64, but given that PathCode - without ext is likely less used than PathCode would have been a better name for PathFileNameExt64
		{"FNVHash32", 0x144254780},
		{"GetFreeRoamLangId", 0x14617ca30},
		{"UpdateFOVLerp", 0x14110ecb0},//tex: TODO: verify the return AL>RAX
		{"UnkPrintFuncStubbedOut", 0x142fbb650},//tex: Some info printing function that has been stubbed out
		{"l_StubbedOut", 0x140170ca0},//tex: another retail stubb out to wrangle
		{"nullsub_2", 0x140deb8c0},//tex: another retail stubb out to wrangle
		{"LoadFileSub", 0x1430406e0},
		{"LoadFile", 0x1431d8d20},
		{"LoadFile_01", 0x1431d8510},
		{"LoadFile_02", 0x1431d93a0},
		{"LoadFile_03", 0x1431dc440},
		{"LoadFile_05", 0x1431d9670},
		{"LoadPlayerPartsFpk", 0x146c45ec0},
		{"LoadPlayerPartsParts", 0x146c45890},
		{"LoadPlayerCamoFpk", 0x146c42d20},
		{"LoadPlayerCamoFv2", 0x146c42500},
		{"LoadPlayerFacialMotionFpk", 0x146c45410},
		{"LoadPlayerFacialMotionMtar", 0x146c45170},
		{"LoadPlayerBionicArmFpk", 0x140ae2fc0},
		{"LoadPlayerBionicArmFv2", 0x140ae2f10},
		{"CheckPlayerPartsIfShouldApplySkinToneFv2", 0x140ae32d0},
		{"LoadPlayerPartsSkinToneFv2", 0x140ae2430},
		{"IsHeadNeededForPartsType", 0x140ae2380},
		{"IsHeadNeededForPartsTypeAndAvatar", 0x140ae23d0},
		{"LoadPlayerSnakeFaceFpk", 0x140ae2cc0},
		{"LoadPlayerSnakeFaceFv2", 0x140ae2bb0},
		{"LoadAvatarOgreHornFpk", 0x146c3a270},
		{"LoadAvatarOgreHornFv2", 0x146c39f60},
		{"LoadBuddyMainFile", 0x140a400c0},
		{"LoadBuddyQuietWeaponFpk", 0x1468da220},
		{"LoadBuddyWalkerGearArmFpk", 0x1468d8f70},
		{"LoadBuddyWalkerGearHeadFpk", 0x1468d93f0},
		{"LoadBuddyWalkerGearWeaponFpk", 0x1468d9710},
		{"LoadDefaultFpksFunc", 0x143183bb0},
		{"PreparePlayerVehicleInSortie", 0x146f3e290},
		{"PreparePlayerVehicleInGame", 0x146f3df70},
		{"LoadDefaultFpkPtrFunc", 0x14317f300},
		{"LoadAllVehicleCamoFpks", 0x145021900},
		{"CreateInPlace", 0x142e5c040},
		{"lua_newstate", 0x14cbd9730},//tex could use default implementation, but may want to hook if we want to see what the engine is up to
		{"lua_close", 0x14cbd9210},
		{"lua_newthread", 0x14cbb71c0},
		{"lua_atpanic", 0x14cbb23f0},
		{"lua_settop", 0x14cbbd720},
		{"lua_pushvalue", 0x14cbba860},
		{"lua_remove", 0x14cbbb9c0},
		{"lua_insert", 0x141a04d50},
		{"lua_replace", 0x14cbbc030},
		{"lua_checkstack", 0x14cbb2680},
		{"lua_xmove", 0x14cbbf570},
		{"lua_isnumber", 0x14cbb6570},
		{"lua_isstring", 0x14cbb6730},
		{"lua_iscfunction", 0x14cbb5d20},
		{"lua_type", 0x14cbbf030},
		{"lua_rawequal", 0x14cbbad60},
		{"lua_lessthan", 0x14cbb6de0},
		{"lua_tonumber", 0x14cbbe2c0},
		{"lua_tointeger", 0x14cbbdff0},
		{"lua_toboolean", 0x14cbbd810},
		{"lua_tolstring", 0x14cbbe110},
		{"lua_objlen", 0x14cbb7f10},
		{"lua_tocfunction", 0x14cbbdc50},
		{"lua_touserdata", 0x14cbbec70},
		{"lua_tothread", 0x14cbbe800}, 
		{"lua_topointer", 0x14cbbe4d0},
		{"lua_pushnil", 0x14cbb9f50},
		{"lua_pushnumber", 0x14cbba1e0},
		{"lua_pushinteger", 0x14cbb9370},
		{"lua_pushlstring", 0x14cbb9940},
		{"lua_pushstring", 0x14cbba300},
		{"lua_pushvfstring", 0x14cbbaab0},
		{"lua_pushfstring", 0x14cbb90b0},
		{"lua_pushcclosure", 0x14cbb8d10},
		{"lua_pushboolean", 0x14cbb89d0},
		{"lua_pushlightuserdata", 0x14cbb9690},
		{"lua_pushthread", 0x14cbba7c0},
		{"lua_gettable", 0x14cbb5560},
		{"lua_getfield", 0x14cbb4d70},
		{"lua_rawget", 0x14cbbaec0},
		{"lua_rawgeti", 0x14cbbb150},//via MACRO lua_getref
		{"lua_createtable", 0x14cbb3420},
		{"lua_newuserdata", 0x14cbb7650},
		{"lua_getmetatable", 0x14cbb4f40},
		{"lua_getfenv", 0x14cbb4b40},
		{"lua_settable", 0x14cbbd450},
		{"lua_setfield", 0x14cbbc6e0},
		{"lua_rawset", 0x14cbbb300},
		{"lua_rawseti", 0x14cbbb690},
		{"lua_setmetatable", 0x14cbbd030},
		{"lua_setfenv", 0x14cbbc510}, 
		{"lua_call", 0x14cbb2490},
		{"lua_pcall", 0x14cbb8560},
		{"lua_cpcall", 0x14cbb3020},
		{"lua_load", 0x14cbb6f40},
		{"lua_dump", 0x14cbb3620},
		{"lua_resume", 0x14cbcb3a0}, 
		{"lua_gc", 0x141a04970},
		{"lua_error", 0x14cbb4790}, 
		{"lua_next", 0x14cbb7c40},
		{"lua_concat", 0x14cbb2a20},
		{"lua_getstack", 0x14cbee930},
		{"lua_getinfo", 0x141a14500},
		{"lua_getlocal", 0x14cbedba0},
		{"lua_setlocal", 0x14cbeee50},
		{"lua_getupvalue", 0x14cbb5a60},
		{"lua_setupvalue", 0x141a05990},
		{"lua_sethook", 0x14cbeed80}, 
		{"luaI_openlib", 0x14cbe0910},
		{"luaL_getmetafield", 0x14cbdef80},
		{"luaL_callmeta", 0x14cbdb6a0},
		{"luaL_typerror", 0x141a0bb60}, 
		{"luaL_argerror", 0x14cbdb010},
		{"luaL_checklstring", 0x14cbdc390},
		{"luaL_optlstring", 0x14cbe1040},
		{"luaL_checknumber", 0x14cbdc940},
		{"luaL_checkinteger", 0x14cbdbb30},
		{"luaL_optinteger", 0x14cbe0d70},
		{"luaL_checkstack", 0x14cbdcdf0},
		{"luaL_checktype", 0x14cbdd760},
		{"luaL_checkany", 0x14cbdb8f0},
		{"luaL_newmetatable", 0x14cbe00b0},
		{"luaL_checkudata", 0x14cbddf80},
		{"luaL_where", 0x14cbe1dd0},
		{"luaL_error", 0x14cbdeb10},
		{"luaL_checkoption", 0x14cbdcc00},
		{"luaL_loadfile", 0x141a0b230},
		{"luaL_loadbuffer", 0x14cbdf8b0},
		{"luaL_newstate", 0x14cbe0560},
		{"luaL_gsub", 0x141a0adb0},
		{"luaL_findtable", 0x14cbded20},
		{"luaL_prepbuffer", 0x14cbe14a0},
		{"luaL_addlstring", 0x141a0a510},
		{"luaL_addvalue", 0x14cbdae90},
		{"luaL_pushresult", 0x14cbe17a0},
		{"luaopen_base", 0x14cbfbc80},
		{"luaopen_table", 0x14cbfc280},
		{"luaopen_io", 0x14cbfc580},
		{"luaopen_os", 0x14cbfca80},
		{"luaopen_string", 0x14cbfcc20},
		{"luaopen_math", 0x14cbfd070},
		{"luaopen_debug", 0x14cbfd480},
		{"luaopen_package", 0x14cbfd640},
		{"luaL_openlibs", 0x14cbd9fd0},
	};//map mgsvtpp_adresses_1_0_15_3_en
}//namespace IHHook
